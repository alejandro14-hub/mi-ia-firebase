from flask import Flask, request, jsonify
from flask_cors import CORS
import openai
import firebase_admin
from firebase_admin import credentials, firestore
import os
from dotenv import load_dotenv

# Cargar variables del archivo .env
load_dotenv()

# Inicializar Flask
app = Flask(__name__)
CORS(app)  # Permitir peticiones desde Thunkable o web

# Inicializar Firebase
cred = credentials.Certificate("serviceAccountKey.json")
firebase_admin.initialize_app(cred)
db = firestore.client()

# Inicializar OpenAI
openai.api_key = os.getenv("OPENAI_API_KEY")

# ðŸ§  Endpoint de chat
@app.route("/chat", methods=["POST"])
def chat():
    try:
        data = request.get_json()
        user_id = data.get("userId")
        mensaje = data.get("mensaje")

        if not user_id or not mensaje:
            return jsonify({"error": "Faltan datos (userId o mensaje)"}), 400

        # Guardar el mensaje del usuario
        db.collection("chats").document(user_id).collection("mensajes").add({
            "remitente": "usuario",
            "texto": mensaje,
            "timestamp": firestore.SERVER_TIMESTAMP
        })

        # Llamar al modelo de OpenAI
        completion = openai.chat.completions.create(
            model="gpt-4o-mini",
            messages=[
                {"role": "system", "content": "Eres un asistente Ãºtil que responde en espaÃ±ol."},
                {"role": "user", "content": mensaje}
            ]
        )

        respuesta = completion.choices[0].message.content.strip()

        # Guardar la respuesta de la IA
        db.collection("chats").document(user_id).collection("mensajes").add({
            "remitente": "ia",
            "texto": respuesta,
            "timestamp": firestore.SERVER_TIMESTAMP
        })

        return jsonify({"respuesta": respuesta})

    except Exception as e:
        print("Error:", e)
        return jsonify({"error": str(e)}), 500


if __name__ == "__main__":
    port = int(os.getenv("PORT", 5000))
    print(f"ðŸš€ Servidor corriendo en http://localhost:{port}")
    app.run(host="0.0.0.0", port=port, debug=True)
